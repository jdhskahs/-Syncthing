// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/api/api_auth_webauthn.proto

package api

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State that changes often but also is not security-critical,
// and therefore can be wiped and overwritten without much consequence if needed.
type WebauthnVolatileState struct {
	Credentials map[string]WebauthnCredentialVolatileState `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials" xml:"credential" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *WebauthnVolatileState) Reset()         { *m = WebauthnVolatileState{} }
func (m *WebauthnVolatileState) String() string { return proto.CompactTextString(m) }
func (*WebauthnVolatileState) ProtoMessage()    {}
func (*WebauthnVolatileState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0236aafa0ec1587d, []int{0}
}
func (m *WebauthnVolatileState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebauthnVolatileState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebauthnVolatileState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebauthnVolatileState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebauthnVolatileState.Merge(m, src)
}
func (m *WebauthnVolatileState) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebauthnVolatileState) XXX_DiscardUnknown() {
	xxx_messageInfo_WebauthnVolatileState.DiscardUnknown(m)
}

var xxx_messageInfo_WebauthnVolatileState proto.InternalMessageInfo

type WebauthnCredentialVolatileState struct {
	SignCount   uint32    `protobuf:"varint,1,opt,name=sign_count,json=signCount,proto3" json:"signCount" xml:"signCount"`
	LastUseTime time.Time `protobuf:"bytes,2,opt,name=last_use_time,json=lastUseTime,proto3,stdtime" json:"lastUseTime" xml:"lastUseTime"`
}

func (m *WebauthnCredentialVolatileState) Reset()         { *m = WebauthnCredentialVolatileState{} }
func (m *WebauthnCredentialVolatileState) String() string { return proto.CompactTextString(m) }
func (*WebauthnCredentialVolatileState) ProtoMessage()    {}
func (*WebauthnCredentialVolatileState) Descriptor() ([]byte, []int) {
	return fileDescriptor_0236aafa0ec1587d, []int{1}
}
func (m *WebauthnCredentialVolatileState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebauthnCredentialVolatileState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebauthnCredentialVolatileState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebauthnCredentialVolatileState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebauthnCredentialVolatileState.Merge(m, src)
}
func (m *WebauthnCredentialVolatileState) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebauthnCredentialVolatileState) XXX_DiscardUnknown() {
	xxx_messageInfo_WebauthnCredentialVolatileState.DiscardUnknown(m)
}

var xxx_messageInfo_WebauthnCredentialVolatileState proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WebauthnVolatileState)(nil), "api.WebauthnVolatileState")
	proto.RegisterMapType((map[string]WebauthnCredentialVolatileState)(nil), "api.WebauthnVolatileState.CredentialsEntry")
	proto.RegisterType((*WebauthnCredentialVolatileState)(nil), "api.WebauthnCredentialVolatileState")
}

func init() { proto.RegisterFile("lib/api/api_auth_webauthn.proto", fileDescriptor_0236aafa0ec1587d) }

var fileDescriptor_0236aafa0ec1587d = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x8b, 0xd3, 0x40,
	0x1c, 0xc5, 0x33, 0x2d, 0x0a, 0x9d, 0xb2, 0xb8, 0x06, 0x85, 0x52, 0x64, 0xa6, 0x0c, 0xb2, 0x16,
	0x94, 0x29, 0xac, 0x17, 0xd9, 0x8b, 0x90, 0x45, 0xf0, 0x1c, 0x7f, 0xe2, 0x25, 0x4c, 0xea, 0x98,
	0x0e, 0x3b, 0x4d, 0x42, 0x33, 0x59, 0xcd, 0x7f, 0xb1, 0x47, 0x8f, 0x9e, 0xfd, 0x4b, 0x7a, 0xcc,
	0xd1, 0xd3, 0xc8, 0x6e, 0x6e, 0x3d, 0xe6, 0x2f, 0x90, 0x99, 0xa4, 0x26, 0x15, 0x61, 0x0f, 0x21,
	0x99, 0xcf, 0x7c, 0xdf, 0x9b, 0x97, 0xbc, 0x40, 0x2c, 0x45, 0xb8, 0x60, 0xa9, 0x30, 0x57, 0xc0,
	0x72, 0xb5, 0x0a, 0xbe, 0xf2, 0xd0, 0xdc, 0x63, 0x9a, 0x6e, 0x12, 0x95, 0xb8, 0x43, 0x96, 0x8a,
	0x29, 0x8e, 0x92, 0x24, 0x92, 0x7c, 0x61, 0x51, 0x98, 0x7f, 0x59, 0x28, 0xb1, 0xe6, 0x99, 0x62,
	0xeb, 0xb4, 0x99, 0x22, 0x3f, 0x07, 0xf0, 0xe1, 0x87, 0x56, 0xf8, 0x3e, 0x91, 0x4c, 0x09, 0xc9,
	0xdf, 0x28, 0xa6, 0xb8, 0x7b, 0x09, 0xc7, 0xcb, 0x0d, 0xff, 0xcc, 0x63, 0x25, 0x98, 0xcc, 0x26,
	0x60, 0x36, 0x9c, 0x8f, 0x4f, 0x9f, 0x52, 0x96, 0x0a, 0xfa, 0x5f, 0x01, 0x3d, 0xef, 0xa6, 0x5f,
	0xc5, 0x6a, 0x53, 0x78, 0x4f, 0xb6, 0x1a, 0x3b, 0x3b, 0x8d, 0xfb, 0x3e, 0xb5, 0xc6, 0xc7, 0xdf,
	0xd6, 0xf2, 0x8c, 0x74, 0x8c, 0xf8, 0xfd, 0x81, 0xe9, 0x77, 0x00, 0x8f, 0xff, 0xb5, 0x72, 0x4f,
	0xe0, 0xf0, 0x82, 0x17, 0x13, 0x30, 0x03, 0xf3, 0x91, 0xf7, 0x60, 0xa7, 0xb1, 0x59, 0xd6, 0x1a,
	0x8f, 0xac, 0xd7, 0x05, 0x2f, 0x88, 0x6f, 0x88, 0xfb, 0x11, 0xde, 0xb9, 0x64, 0x32, 0xe7, 0x93,
	0xc1, 0x0c, 0xcc, 0xc7, 0xa7, 0x8f, 0x0f, 0xe2, 0x76, 0xae, 0x07, 0xc1, 0xbd, 0x47, 0x6d, 0xce,
	0x46, 0x5a, 0x6b, 0x3c, 0xb6, 0xae, 0x76, 0x45, 0xfc, 0x86, 0x9e, 0x0d, 0x5e, 0x00, 0x52, 0x02,
	0x88, 0x6f, 0x31, 0x73, 0x5f, 0x42, 0x98, 0x89, 0x28, 0x0e, 0x96, 0x49, 0x1e, 0x2b, 0x1b, 0xf8,
	0xc8, 0x9b, 0xed, 0x34, 0x1e, 0x19, 0x7a, 0x6e, 0x60, 0xad, 0xf1, 0x3d, 0x7b, 0xc0, 0x5f, 0x42,
	0xfc, 0x6e, 0xd7, 0x95, 0xf0, 0x48, 0xb2, 0x4c, 0x05, 0x79, 0xc6, 0x03, 0xd3, 0x56, 0xfb, 0x2a,
	0x53, 0xda, 0x54, 0x49, 0xf7, 0x55, 0xd2, 0xb7, 0xfb, 0x2a, 0xbd, 0x67, 0xfb, 0x0f, 0x6d, 0x84,
	0xef, 0x32, 0x6e, 0x76, 0x6a, 0x8d, 0xef, 0xdb, 0x53, 0x7a, 0x8c, 0x5c, 0xfd, 0xc6, 0xc0, 0xef,
	0x4f, 0x79, 0xaf, 0xb7, 0xd7, 0xc8, 0x29, 0xaf, 0x91, 0xb3, 0xbd, 0x41, 0xa0, 0xbc, 0x41, 0xe0,
	0xaa, 0x42, 0xce, 0x8f, 0x0a, 0x81, 0xb2, 0x42, 0xce, 0xaf, 0x0a, 0x39, 0x9f, 0x4e, 0x22, 0xa1,
	0x56, 0x79, 0x48, 0x97, 0xc9, 0x7a, 0x91, 0x15, 0xf1, 0x52, 0xad, 0x44, 0x1c, 0xf5, 0x9e, 0xda,
	0xff, 0x30, 0xbc, 0x6b, 0x83, 0x3d, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x41, 0x04, 0xbd,
	0x99, 0x02, 0x00, 0x00,
}

func (m *WebauthnVolatileState) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebauthnVolatileState) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebauthnVolatileState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Credentials) > 0 {
		for k := range m.Credentials {
			v := m.Credentials[k]
			baseI := i
			{
				size, err := (&v).MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApiAuthWebauthn(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintApiAuthWebauthn(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintApiAuthWebauthn(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *WebauthnCredentialVolatileState) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebauthnCredentialVolatileState) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebauthnCredentialVolatileState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LastUseTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LastUseTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintApiAuthWebauthn(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x12
	if m.SignCount != 0 {
		i = encodeVarintApiAuthWebauthn(dAtA, i, uint64(m.SignCount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApiAuthWebauthn(dAtA []byte, offset int, v uint64) int {
	offset -= sovApiAuthWebauthn(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WebauthnVolatileState) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Credentials) > 0 {
		for k, v := range m.Credentials {
			_ = k
			_ = v
			l = v.ProtoSize()
			mapEntrySize := 1 + len(k) + sovApiAuthWebauthn(uint64(len(k))) + 1 + l + sovApiAuthWebauthn(uint64(l))
			n += mapEntrySize + 1 + sovApiAuthWebauthn(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *WebauthnCredentialVolatileState) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SignCount != 0 {
		n += 1 + sovApiAuthWebauthn(uint64(m.SignCount))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastUseTime)
	n += 1 + l + sovApiAuthWebauthn(uint64(l))
	return n
}

func sovApiAuthWebauthn(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApiAuthWebauthn(x uint64) (n int) {
	return sovApiAuthWebauthn(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WebauthnVolatileState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuthWebauthn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebauthnVolatileState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebauthnVolatileState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuthWebauthn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAuthWebauthn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApiAuthWebauthn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = make(map[string]WebauthnCredentialVolatileState)
			}
			var mapkey string
			mapvalue := &WebauthnCredentialVolatileState{}
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApiAuthWebauthn
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApiAuthWebauthn
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthApiAuthWebauthn
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthApiAuthWebauthn
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApiAuthWebauthn
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthApiAuthWebauthn
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthApiAuthWebauthn
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &WebauthnCredentialVolatileState{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipApiAuthWebauthn(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthApiAuthWebauthn
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Credentials[mapkey] = *mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuthWebauthn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApiAuthWebauthn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebauthnCredentialVolatileState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApiAuthWebauthn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebauthnCredentialVolatileState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebauthnCredentialVolatileState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SignCount", wireType)
			}
			m.SignCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuthWebauthn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SignCount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUseTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApiAuthWebauthn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApiAuthWebauthn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApiAuthWebauthn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LastUseTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApiAuthWebauthn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApiAuthWebauthn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApiAuthWebauthn(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApiAuthWebauthn
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiAuthWebauthn
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApiAuthWebauthn
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApiAuthWebauthn
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApiAuthWebauthn
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApiAuthWebauthn
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApiAuthWebauthn        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApiAuthWebauthn          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApiAuthWebauthn = fmt.Errorf("proto: unexpected end of group")
)
