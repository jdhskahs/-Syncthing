// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/config/config.proto

package config

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/syncthing/syncthing/proto/ext"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Configuration struct {
	Version        int32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version" xml:"version,attr"`
	Folders        []FolderConfiguration `protobuf:"bytes,2,rep,name=folders,proto3" json:"folders" xml:"folder"`
	Devices        []DeviceConfiguration `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices" xml:"device"`
	GUI            GUIConfiguration      `protobuf:"bytes,4,opt,name=gui,proto3" json:"gui" xml:"gui"`
	LDAP           LDAPConfiguration     `protobuf:"bytes,5,opt,name=ldap,proto3" json:"ldap" xml:"ldap"`
	Options        OptionsConfiguration  `protobuf:"bytes,6,opt,name=options,proto3" json:"options" xml:"options"`
	IgnoredDevices []ObservedDevice      `protobuf:"bytes,7,rep,name=ignored_devices,json=ignoredDevices,proto3" json:"remoteIgnoredDevices" xml:"remoteIgnoredDevice"`
	PendingDevices []ObservedDevice      `protobuf:"bytes,8,rep,name=pending_devices,json=pendingDevices,proto3" json:"pendingDevices" xml:"pendingDevice"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_baadf209193dc627, []int{0}
}
func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Configuration)(nil), "config.Configuration")
}

func init() { proto.RegisterFile("lib/config/config.proto", fileDescriptor_baadf209193dc627) }

var fileDescriptor_baadf209193dc627 = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x6d, 0xd2, 0x26, 0x74, 0xfb, 0x25, 0xb9, 0x08, 0x1c, 0x40, 0xde, 0x60, 0x05, 0x14,
	0x10, 0xa4, 0xa2, 0xdc, 0xb8, 0x11, 0x22, 0xa2, 0x08, 0x24, 0xd0, 0x4a, 0x45, 0xc0, 0x05, 0x25,
	0xf1, 0xd6, 0x59, 0x29, 0xd9, 0x8d, 0xfc, 0x11, 0x95, 0xb7, 0x40, 0x3c, 0x01, 0x57, 0x8e, 0xbc,
	0x45, 0x6f, 0xcd, 0x91, 0xd3, 0x4a, 0x6d, 0x2e, 0x28, 0x47, 0x3f, 0x01, 0xda, 0xaf, 0xd4, 0x46,
	0x86, 0x93, 0x77, 0xe6, 0xff, 0x9f, 0xdf, 0x8c, 0xc6, 0xbb, 0xe0, 0xd6, 0x84, 0x0c, 0x0f, 0x47,
	0x8c, 0x9e, 0x90, 0x50, 0x7f, 0xda, 0xb3, 0x88, 0x25, 0xcc, 0xa9, 0xaa, 0xe8, 0x76, 0x33, 0x67,
	0x38, 0x61, 0x93, 0x00, 0x47, 0x2a, 0x48, 0xa3, 0x41, 0x42, 0x18, 0x55, 0xee, 0x82, 0x2b, 0xc0,
	0x73, 0x32, 0xc2, 0x65, 0xae, 0x7b, 0x39, 0x57, 0x98, 0x92, 0x32, 0x8b, 0x9f, 0xb3, 0x4c, 0x82,
	0xc1, 0xac, 0xcc, 0x73, 0x3f, 0xe7, 0x61, 0x33, 0x21, 0xc4, 0x65, 0xb6, 0x7a, 0xde, 0x36, 0x8c,
	0x71, 0x34, 0xc7, 0x81, 0x96, 0xb6, 0xf0, 0x69, 0xa2, 0x8e, 0xfe, 0xcf, 0x2a, 0xd8, 0x7d, 0x99,
	0xaf, 0x76, 0x5e, 0x83, 0xda, 0x1c, 0x47, 0x31, 0x61, 0xd4, 0xb5, 0x1b, 0x76, 0x6b, 0xb3, 0xf3,
	0x74, 0xc5, 0xa1, 0x49, 0x65, 0x1c, 0x3a, 0xa7, 0xd3, 0xc9, 0x73, 0x5f, 0xc7, 0x8f, 0x07, 0x49,
	0x12, 0xf9, 0xab, 0xf3, 0xe6, 0x4e, 0x3e, 0x81, 0x8c, 0xdd, 0x79, 0x0f, 0x6a, 0x6a, 0x6b, 0xb1,
	0x7b, 0xad, 0x51, 0x69, 0x6d, 0x1f, 0xdd, 0x69, 0xeb, 0x35, 0xbf, 0x92, 0xe9, 0x42, 0xeb, 0x0e,
	0x3c, 0xe3, 0xd0, 0x12, 0xdd, 0x74, 0x4d, 0xc6, 0xe1, 0x8e, 0xec, 0xa6, 0x62, 0x1f, 0x19, 0x41,
	0x70, 0xd5, 0x9e, 0x63, 0xb7, 0x52, 0xe4, 0x76, 0x65, 0xfa, 0x1f, 0x5c, 0x5d, 0xb3, 0xe6, 0xaa,
	0xd8, 0x47, 0x46, 0x70, 0x10, 0xa8, 0x84, 0x29, 0x71, 0x37, 0x1a, 0x76, 0x6b, 0xfb, 0xc8, 0x35,
	0xcc, 0xde, 0x71, 0xbf, 0x08, 0x7c, 0x20, 0x80, 0x97, 0x1c, 0x56, 0x7a, 0xc7, 0xfd, 0x15, 0x87,
	0xa2, 0x26, 0xe3, 0x70, 0x4b, 0x32, 0xc3, 0x94, 0xf8, 0xdf, 0x16, 0x4d, 0x21, 0x21, 0x21, 0x38,
	0x1f, 0xc1, 0x86, 0xf8, 0x95, 0xee, 0xa6, 0x84, 0xd6, 0x0d, 0xf4, 0x4d, 0xf7, 0xc5, 0xbb, 0x22,
	0xf5, 0x91, 0xa6, 0x6e, 0x08, 0x69, 0xc5, 0xa1, 0x2c, 0xcb, 0x38, 0x04, 0x92, 0x2b, 0x02, 0x01,
	0x96, 0x2a, 0x92, 0x9a, 0xf3, 0x01, 0xd4, 0xf4, 0x0d, 0x70, 0xab, 0x92, 0x7e, 0xd7, 0xd0, 0xdf,
	0xaa, 0x74, 0xb1, 0x41, 0xc3, 0xec, 0x41, 0x17, 0x65, 0x1c, 0xee, 0x4a, 0xb6, 0x8e, 0x7d, 0x64,
	0x14, 0xe7, 0x87, 0x0d, 0xf6, 0x49, 0x48, 0x59, 0x84, 0x83, 0xcf, 0x66, 0xd3, 0x35, 0xb9, 0xe9,
	0x9b, 0xeb, 0x16, 0xfa, 0x52, 0xa9, 0x8d, 0x77, 0xc6, 0x1a, 0x7e, 0x23, 0xc2, 0x53, 0x96, 0xe0,
	0xbe, 0x2a, 0xee, 0xae, 0x37, 0x5e, 0x97, 0x9d, 0x4a, 0x44, 0x71, 0x7d, 0x0e, 0x4a, 0xf2, 0xd9,
	0x79, 0xb3, 0x94, 0x85, 0xf6, 0x48, 0x21, 0x76, 0x28, 0xd8, 0x9f, 0x61, 0x1a, 0x10, 0x1a, 0xae,
	0x47, 0xbd, 0xfe, 0xdf, 0x51, 0x9f, 0xe8, 0x51, 0xf7, 0x74, 0xd9, 0xd5, 0x90, 0x07, 0x72, 0xc8,
	0x42, 0xda, 0x47, 0x7f, 0xd9, 0x3a, 0xbd, 0xb3, 0x0b, 0xcf, 0x5a, 0x5c, 0x78, 0xd6, 0xef, 0x4b,
	0xcf, 0xfa, 0xba, 0xf4, 0xac, 0xef, 0x4b, 0xcf, 0x5e, 0x2c, 0x3d, 0xeb, 0xd7, 0xd2, 0xb3, 0x3e,
	0x3d, 0x0c, 0x49, 0x32, 0x4e, 0x87, 0xed, 0x11, 0x9b, 0x1e, 0xc6, 0x5f, 0xe8, 0x28, 0x19, 0x13,
	0x1a, 0xe6, 0x4e, 0x57, 0xcf, 0x72, 0x58, 0x95, 0x6f, 0xf0, 0xd9, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xc0, 0x6c, 0x5e, 0x69, 0x86, 0x04, 0x00, 0x00,
}

func (m *Configuration) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Version != 0 {
		n += 1 + sovConfig(uint64(m.Version))
	}
	if len(m.Folders) > 0 {
		for _, e := range m.Folders {
			l = e.ProtoSize()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.Devices) > 0 {
		for _, e := range m.Devices {
			l = e.ProtoSize()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	l = m.GUI.ProtoSize()
	n += 1 + l + sovConfig(uint64(l))
	l = m.LDAP.ProtoSize()
	n += 1 + l + sovConfig(uint64(l))
	l = m.Options.ProtoSize()
	n += 1 + l + sovConfig(uint64(l))
	if len(m.IgnoredDevices) > 0 {
		for _, e := range m.IgnoredDevices {
			l = e.ProtoSize()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	if len(m.PendingDevices) > 0 {
		for _, e := range m.PendingDevices {
			l = e.ProtoSize()
			n += 1 + l + sovConfig(uint64(l))
		}
	}
	return n
}

func sovConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozConfig(x uint64) (n int) {
	return sovConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
