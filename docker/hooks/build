#!/bin/bash

# navigate from Dockerfile folder to project root
cd ..

### upgrade to Docker 18 ###
docker --version
apt-get update && apt-get dist-upgrade -y && apt-get install jq -y
docker --version
mkdir ~/.docker
AUTHTOKEN=$(cat ~/.dockercfg | jq '.["https://index.docker.io/v1/"] .auth')
echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\": $AUTHTOKEN}},\"experimental\": \"enabled\"}" > ~/.docker/config.json
### -------------------- ###

MULTIARCH_DOCKERFILE_PATH="${DOCKERFILE_PATH/Dockerfile/multiarch.Dockerfile}"

# register qemu modules
docker run --rm --privileged multiarch/qemu-user-static:register

# remove MULTIARCH line and build default image
sed "/__MULTIARCH_/d" "$MULTIARCH_DOCKERFILE_PATH" > "$DOCKERFILE_PATH"
docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="amd64" --build-arg SERVE_U="amd64" --build-arg SERVE_R="alpine" --build-arg QEMUARCH="amd64" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:latest/:amd64-latest}" .

# enable MULTIARCH line and build multiarch images
sed "s/__MULTIARCH_//g" "$MULTIARCH_DOCKERFILE_PATH" > "$DOCKERFILE_PATH"
curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-i386-static.tar.gz" | tar xz
docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="386" --build-arg SERVE_U="i386" --build-arg SERVE_R="alpine" --build-arg QEMUARCH="i386" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:latest/:i386-latest}" .
curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-arm-static.tar.gz" | tar xz
docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="arm" --build-arg SERVE_U="arm32v6" --build-arg SERVE_R="alpine" --build-arg QEMUARCH="arm" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:latest/:arm-latest}" .
curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-aarch64-static.tar.gz" | tar xz
docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="arm64" --build-arg SERVE_U="arm64v8" --build-arg SERVE_R="alpine" --build-arg QEMUARCH="aarch64" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:latest/:aarch64-latest}" .
curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-ppc64le-static.tar.gz" | tar xz
docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="ppc64le" --build-arg SERVE_U="ppc64le" --build-arg SERVE_R="alpine" --build-arg QEMUARCH="ppc64le" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:latest/:ppc64le-latest}" .
curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-s390x-static.tar.gz" | tar xz
docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="s390x" --build-arg SERVE_U="s390x" --build-arg SERVE_R="alpine" --build-arg QEMUARCH="s390x" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:latest/:s390x-latest}" .
