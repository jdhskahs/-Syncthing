#!/bin/bash

# navigate from Dockerfile folder to project root
cd ..

### upgrade to Docker 18 ###
docker --version
apt-get update && apt-get dist-upgrade -y && apt-get install jq -y
docker --version
mkdir ~/.docker
AUTHTOKEN=$(cat ~/.dockercfg | jq '.["https://index.docker.io/v1/"] .auth')
echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\": $AUTHTOKEN}},\"experimental\": \"enabled\"}" > ~/.docker/config.json
### -------------------- ###

MULTIARCH_DOCKERFILE_PATH="${DOCKERFILE_PATH/Dockerfile/multiarch.Dockerfile}"

# register qemu modules
docker run --rm --privileged multiarch/qemu-user-static:register

# BUILD_GOARCH:SERVE_U:SERVE_R:QEMUARCH
archs=( 386:i386:alpine:i386 amd64:amd64:alpine:amd64 arm:arm32v6:alpine:arm arm64:arm64v8:alpine:aarch64 ppc64le:ppc64le:alpine:ppc64le s390x:s390x:alpine:s390x )

# push individual tags
for arch in "${archs[@]}"
do
  parts=( ${arch//:/ } )

  if [ "${parts[0]}" == "amd" ]
  then
    # remove MULTIARCH line and build default image
    sed "/__MULTIARCH_/d" "$MULTIARCH_DOCKERFILE_PATH" > "$DOCKERFILE_PATH"
  else
    # enable MULTIARCH line and build multiarch images
    curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-${parts[3]}-static.tar.gz" | tar xz
    sed "s/__MULTIARCH_//g" "$MULTIARCH_DOCKERFILE_PATH" > "$DOCKERFILE_PATH"
  fi

  docker build --build-arg BUILD_GOOS="linux" --build-arg BUILD_GOARCH="${parts[0]}" --build-arg SERVE_U="${parts[1]}" --build-arg SERVE_R="${parts[2]}" --build-arg QEMUARCH="${parts[3]}" -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME/:/:${parts[3]}-}" .
done
