#!/bin/bash

# get this script's directory and the multiarch Dockerfile path
THIS=$(dirname $(readlink -f "$0"))
MULTIARCH_DOCKERFILE_PATH="${DOCKERFILE_PATH/Dockerfile/multiarch.Dockerfile}"

# navigate from Dockerfile folder to project root
cd ..

###   temporary hack that upgrades DockerHub's build machine Docker version to 18 (supports manifests)   ###
# display current Docker version
docker --version

if [[ $(docker --version) == "Docker version 17"* ]]
then
  # upgrade Docker and install jq
  apt-get update && apt-get dist-upgrade docker -y && apt-get install jq -y

  # display new Docker version
  docker --version

  # migrate authentication configuration from .dockercfg to .docker/config.json
  mkdir ~/.docker
  AUTHTOKEN=$(cat ~/.dockercfg | jq '.["https://index.docker.io/v1/"] .auth')
  echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\": $AUTHTOKEN}},\"experimental\": \"enabled\"}" \
    > ~/.docker/config.json
fi
### ---------------------------------------------------------------------------------------------------- ###

# register qemu modules
docker run --rm --privileged multiarch/qemu-user-static:register

# load build variable combinations
archs=()
readarray -t archs < "$THIS/archs.csv"

# push individual tags
for arch in "${archs[@]:1}"
do
  parts=( ${arch//:/ } )

  BUILD_GOOS="${parts[0]}"
  BUILD_GOARCH="${parts[1]}"
  SERVE_U="${parts[2]}"
  SERVE_R="${parts[3]}"
  QEMUARCH="${parts[4]}"
  VARIANT="${parts[5]}"

  if [ "${parts[1]}" == "amd64" ] # default architecture
  then
    # remove MULTIARCH line to build the default image
    sed "/__MULTIARCH_/d" "$MULTIARCH_DOCKERFILE_PATH" > "$DOCKERFILE_PATH"
  else
    # enable MULTIARCH line to build multiarch images
    curl -L "https://github.com/multiarch/qemu-user-static/releases/download/v3.1.0-2/x86_64_qemu-$QEMUARCH-static.tar.gz" \
      | tar xz
    sed "s/__MULTIARCH_//g" "$MULTIARCH_DOCKERFILE_PATH" > "$DOCKERFILE_PATH"
  fi

  # build it!
  docker build \
    --build-arg BUILD_GOOS="$BUILD_GOOS" \
    --build-arg BUILD_GOARCH="$BUILD_GOARCH" \
    --build-arg SERVE_U="$SERVE_U" \
    --build-arg SERVE_R="$SERVE_R" \
    --build-arg QEMUARCH="$QEMUARCH" \
    -f "$DOCKERFILE_PATH" \
    -t "${IMAGE_NAME/:/:$QEMUARCH-}" \
    .
done
